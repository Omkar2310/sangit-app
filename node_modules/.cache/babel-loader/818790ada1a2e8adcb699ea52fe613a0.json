{"ast":null,"code":"var _jsxFileName = \"/home/omkar/webdev/sangit-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport fire from './firebase';\nimport Login from './components/Login/login';\nimport HomePage from './components/HomePage/homepage';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [user, setUser] = useState('');\n  const [password, setPassword] = useState('');\n  const [email, setEmail] = useState('');\n  const [emailError, setemailError] = useState('');\n  const [passwordError, setpasswordError] = useState('');\n  const [hasAcc, sethasAcc] = useState(false);\n\n  const clearInputs = () => {\n    setEmail('');\n    setPassword('');\n  };\n\n  const clearErrors = () => {\n    setemailError('');\n    setpasswordError('');\n  };\n\n  const handleLogin = () => {\n    clearErrors();\n    fire.auth().signInWithEmailAndPassword(email, password).catch(err => {\n      switch (err.code) {\n        case \"auth/invalid-email\":\n        case \"auth/user-disabled\":\n        case \"auth/user-not-found\":\n          setemailError(err.message);\n          break;\n\n        case \"auth/wrong-password\":\n          setpasswordError(err.message);\n          break;\n      }\n    });\n  };\n\n  const handleSignUp = () => {\n    clearErrors();\n    fire.auth().createUserWithEmailAndPassword(email, password).catch(err => {\n      switch (err.code) {\n        case \"auth/email-already-in-use\":\n        case \"auth/invalid-email\":\n          setemailError(err.message);\n          break;\n\n        case \"auth/weak-password\":\n          setpasswordError(err.message);\n          break;\n      }\n    });\n  };\n\n  const handleLogout = () => {\n    fire.auth().signOut();\n  };\n\n  const authListener = () => {\n    fire.auth().onAuthStateChanged(user => {\n      if (user) {\n        clearInputs();\n        setUser(user);\n      } else {\n        setUser('');\n      }\n    });\n  };\n\n  const handleLoginWithGoogle = () => {\n    var provider = new fire.auth.GoogleAuthProvider();\n    fire.auth().signInWithPopup(provider);\n  };\n\n  useEffect(() => {\n    authListener();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: user ? /*#__PURE__*/_jsxDEV(HomePage, {\n      handleLogout: handleLogout\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 23\n    }, this) : /*#__PURE__*/_jsxDEV(Login, {\n      email: email,\n      setEmail: setEmail,\n      password: password,\n      setPassword: setPassword,\n      handleLogin: handleLogin,\n      handleSignUp: handleSignUp,\n      hasAcc: hasAcc,\n      sethasAcc: sethasAcc,\n      emailError: emailError,\n      passwordError: passwordError,\n      handleGoogle: handleLoginWithGoogle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"hyg3EmQoTmQHqOG/seT/+mp1luY=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/omkar/webdev/sangit-app/src/App.js"],"names":["React","useState","useEffect","fire","Login","HomePage","App","user","setUser","password","setPassword","email","setEmail","emailError","setemailError","passwordError","setpasswordError","hasAcc","sethasAcc","clearInputs","clearErrors","handleLogin","auth","signInWithEmailAndPassword","catch","err","code","message","handleSignUp","createUserWithEmailAndPassword","handleLogout","signOut","authListener","onAuthStateChanged","handleLoginWithGoogle","provider","GoogleAuthProvider","signInWithPopup"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAuBC,SAAvB,QAAuC,OAAvC;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,KAAP,MAAkB,0BAAlB;AACA,OAAOC,QAAP,MAAqB,gCAArB;AACA,OAAO,WAAP;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAM,CAACC,IAAD,EAAMC,OAAN,IAAiBP,QAAQ,CAAC,EAAD,CAA/B;AACA,QAAM,CAACQ,QAAD,EAAUC,WAAV,IAAyBT,QAAQ,CAAC,EAAD,CAAvC;AACA,QAAM,CAACU,KAAD,EAAOC,QAAP,IAAmBX,QAAQ,CAAC,EAAD,CAAjC;AACA,QAAM,CAACY,UAAD,EAAYC,aAAZ,IAA4Bb,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACc,aAAD,EAAeC,gBAAf,IAAkCf,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACgB,MAAD,EAAQC,SAAR,IAAqBjB,QAAQ,CAAC,KAAD,CAAnC;;AAEA,QAAMkB,WAAW,GAAG,MAAM;AACxBP,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACAF,IAAAA,WAAW,CAAC,EAAD,CAAX;AACD,GAHD;;AAKA,QAAMU,WAAW,GAAE,MAAM;AACvBN,IAAAA,aAAa,CAAC,EAAD,CAAb;AACAE,IAAAA,gBAAgB,CAAC,EAAD,CAAhB;AACD,GAHD;;AAKA,QAAMK,WAAW,GAAG,MAAK;AACvBD,IAAAA,WAAW;AACXjB,IAAAA,IAAI,CACHmB,IADD,GAECC,0BAFD,CAE4BZ,KAF5B,EAEkCF,QAFlC,EAGCe,KAHD,CAGOC,GAAG,IAAI;AACZ,cAAOA,GAAG,CAACC,IAAX;AACE,aAAK,oBAAL;AACA,aAAK,oBAAL;AACA,aAAK,qBAAL;AACEZ,UAAAA,aAAa,CAACW,GAAG,CAACE,OAAL,CAAb;AACA;;AACF,aAAK,qBAAL;AACEX,UAAAA,gBAAgB,CAACS,GAAG,CAACE,OAAL,CAAhB;AACA;AARJ;AAWD,KAfD;AAgBD,GAlBD;;AAoBA,QAAMC,YAAY,GAAG,MAAM;AACzBR,IAAAA,WAAW;AACXjB,IAAAA,IAAI,CACHmB,IADD,GAECO,8BAFD,CAEgClB,KAFhC,EAEsCF,QAFtC,EAGCe,KAHD,CAGOC,GAAG,IAAI;AACZ,cAAOA,GAAG,CAACC,IAAX;AACE,aAAK,2BAAL;AACA,aAAK,oBAAL;AACEZ,UAAAA,aAAa,CAACW,GAAG,CAACE,OAAL,CAAb;AACA;;AACF,aAAK,oBAAL;AACEX,UAAAA,gBAAgB,CAACS,GAAG,CAACE,OAAL,CAAhB;AACA;AAPJ;AAUD,KAdD;AAeD,GAjBD;;AAmBA,QAAMG,YAAY,GAAG,MAAM;AACzB3B,IAAAA,IAAI,CAACmB,IAAL,GAAYS,OAAZ;AACD,GAFD;;AAIA,QAAMC,YAAY,GAAG,MAAM;AACzB7B,IAAAA,IAAI,CAACmB,IAAL,GAAYW,kBAAZ,CAA+B1B,IAAI,IAAI;AACrC,UAAGA,IAAH,EAAQ;AACNY,QAAAA,WAAW;AACXX,QAAAA,OAAO,CAACD,IAAD,CAAP;AACD,OAHD,MAGK;AACHC,QAAAA,OAAO,CAAC,EAAD,CAAP;AACD;AACF,KAPD;AAQD,GATD;;AAWA,QAAM0B,qBAAqB,GAAG,MAAM;AAClC,QAAIC,QAAQ,GAAI,IAAIhC,IAAI,CAACmB,IAAL,CAAUc,kBAAd,EAAhB;AAEAjC,IAAAA,IAAI,CACHmB,IADD,GAECe,eAFD,CAEiBF,QAFjB;AAGD,GAND;;AAQAjC,EAAAA,SAAS,CAAC,MAAI;AACZ8B,IAAAA,YAAY;AACb,GAFQ,EAEP,EAFO,CAAT;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,cAEIzB,IAAI,gBAAU,QAAC,QAAD;AAAU,MAAA,YAAY,EAAEuB;AAAxB;AAAA;AAAA;AAAA;AAAA,YAAV,gBAGA,QAAC,KAAD;AAAO,MAAA,KAAK,EAAEnB,KAAd;AAAqB,MAAA,QAAQ,EAAEC,QAA/B;AAAyC,MAAA,QAAQ,EAAEH,QAAnD;AAA6D,MAAA,WAAW,EAAEC,WAA1E;AACJ,MAAA,WAAW,EAAEW,WADT;AACsB,MAAA,YAAY,EAAEO,YADpC;AACkD,MAAA,MAAM,EAAEX,MAD1D;AACkE,MAAA,SAAS,EAAEC,SAD7E;AAEJ,MAAA,UAAU,EAAEL,UAFR;AAEoB,MAAA,aAAa,EAAEE,aAFnC;AAEkD,MAAA,YAAY,EAAEmB;AAFhE;AAAA;AAAA;AAAA;AAAA;AALR;AAAA;AAAA;AAAA;AAAA,UADF;AAeD,CAnGD;;GAAM5B,G;;KAAAA,G;AAqGN,eAAeA,GAAf","sourcesContent":["import React,{useState,useEffect} from 'react';\nimport fire from './firebase';\nimport Login from './components/Login/login';\nimport HomePage from './components/HomePage/homepage';\nimport './App.css';\n\nconst App = () => {\n  const [user,setUser] = useState(''); \n  const [password,setPassword] = useState('');\n  const [email,setEmail] = useState('');\n  const [emailError,setemailError] =useState('');\n  const [passwordError,setpasswordError] =useState('');\n  const [hasAcc,sethasAcc] = useState(false);\n\n  const clearInputs = () => {\n    setEmail('');\n    setPassword('');\n  }\n\n  const clearErrors= () => {\n    setemailError('');\n    setpasswordError('');\n  }\n\n  const handleLogin = () =>{\n    clearErrors();\n    fire\n    .auth()\n    .signInWithEmailAndPassword(email,password)\n    .catch(err => {\n      switch(err.code){\n        case \"auth/invalid-email\":\n        case \"auth/user-disabled\":\n        case \"auth/user-not-found\":\n          setemailError(err.message);\n          break;\n        case \"auth/wrong-password\":\n          setpasswordError(err.message);\n          break;\n        \n      }\n    })\n  }\n\n  const handleSignUp = () => {\n    clearErrors();\n    fire\n    .auth()\n    .createUserWithEmailAndPassword(email,password)\n    .catch(err => {\n      switch(err.code){\n        case \"auth/email-already-in-use\":\n        case \"auth/invalid-email\":\n          setemailError(err.message);\n          break;\n        case \"auth/weak-password\":\n          setpasswordError(err.message);\n          break;\n        \n      }\n    })\n  }\n\n  const handleLogout = () => {\n    fire.auth().signOut();\n  }\n\n  const authListener = () => {\n    fire.auth().onAuthStateChanged(user => {\n      if(user){\n        clearInputs();\n        setUser(user);\n      }else{\n        setUser('');\n      }\n    })\n  }\n\n  const handleLoginWithGoogle = () => {\n    var provider =  new fire.auth.GoogleAuthProvider();\n\n    fire\n    .auth()\n    .signInWithPopup(provider);\n  }\n\n  useEffect(()=>{\n    authListener();\n  },[])\n\n  return (\n    <div className=\"App\">\n      {\n        user ? (      <HomePage handleLogout={handleLogout}/>\n          ) :\n          (\n            <Login email={email} setEmail={setEmail} password={password} setPassword={setPassword}\n        handleLogin={handleLogin} handleSignUp={handleSignUp} hasAcc={hasAcc} sethasAcc={sethasAcc}\n        emailError={emailError} passwordError={passwordError} handleGoogle={handleLoginWithGoogle}\n      />\n          )\n      }\n      \n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}